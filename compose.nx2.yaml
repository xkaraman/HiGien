# version: "3.9"
x-sharedMemoryFastRTPS:
  &sharedMemoryFastRTPS
  type: bind
  source: /dev/shm
  target: /dev/shm

services:
  zed2:
    build:
      # dockerfile: zed2_ros/dockerfile
      context: docker/zed2_ros/
    image: zed2_ros2

    network_mode: host
    pid: host
    volumes:
      - *sharedMemoryFastRTPS

    # stdin_open: true
    # tty: true

    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    # command: ros2 launch zed_wrapper zed2.launch.py
    # command: ros2 run demo_nodes_cpp talker

    privileged: true
    # # devices:
    # #   - "/dev/rplidar:/dev/rplidar" # Lidar
    # #   - "/dev/ttyUSB0:/dev/ttyUSB0" # Lidar?
    # #   - "/dev/ttyUSB1:/dev/ttyUSB1" # Disinfection Board
    # volumes:
    #   - type: volume
    #     source: ~/ros2_workspaces
    #     target: /ros2_workspaces
    #     volume:
    #       nocopy: true
    runtime: nvidia
    # # entrypoint:
    # # env_file:
    # # environment:
    # restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]

  pump_node:
    build:
      context: docker/pump_node/
    image: pump_node
    network_mode: host
    # pid: host

    restart: unless-stopped
    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    volumes:
      - type: volume
        source: ros2_workspaces
        target: /home/ros/ros2_workspaces
        volume:
          nocopy: true
      - *sharedMemoryFastRTPS
    devices:
      # - "/dev/ttyUSB0:/dev/ttyUSB0" # Lidar?
      - "/dev/ttyUSB1:/dev/ttyUSB1" # Disinfection Board
    # entrypoint: /ros_entrypoint.sh
    command: [ "ros2", "run", "higien", "higien_main" ]

    runtime: nvidia

  lidar2:
    build:
      # dockerfile: zed2_ros/dockerfile
      context: docker/rplidar_s2/
    image: sllidar:humble
    container_name: higien_lidar

    network_mode: host
    # pid: host
    # ipc: host

    restart: unless-stopped
    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    volumes:
      - type: volume
        source: ros2_workspaces
        target: /home/ros/ros2_workspaces/
        volume:
          nocopy: true
      - *sharedMemoryFastRTPS

    # privileged: true
    devices:
      - /dev/ttyUSB0
      # - /dev/ttyUSB1
      - /dev/rplidar
    # group_add:
    #   - dialout

    # volumes:
    #   - /dev:/dev
    runtime: nvidia
    command: ros2 launch sllidar_ros2 sllidar_s2_launch.py serial_port:=/dev/rplidar

  lidar2-transformer:
    image: sllidar:humble
    network_mode: host
    # pid: host

    # ipc: host
    # networks:
    #  lanlab:
    #    ipv4_address: 192.168.0.201

    container_name: higien_lidar_transformer
    volumes:
      - *sharedMemoryFastRTPS
    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    # command: ros2 run tf2_ros static_transform_publisher 0.0 0.0 0.1 3.14 0 0 base_footprint laser
    command: ros2 run tf2_ros static_transform_publisher --z 0.1 --yaw 3.14 --frame-id base_footprint --child-frame-id laser
    depends_on:
      - lidar2

  nav2:
    build:
      # dockerfile: zed2_ros/dockerfile
      context: docker/nav2/
    image: nav2:humble
    network_mode: host
    # pid: host
    # ipc: host

    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    runtime: nvidia
    volumes:
      - *sharedMemoryFastRTPS
      - ~/ros2_workspaces:/home/ros/ros2_workspaces/
    command: ros2 launch higien nav2.launch.py use_sim_time:=False autostart:=True map:=/home/ros/ros2_workspaces/higien_ws/src/higien/maps/dipae.yaml
    # command: ros2 launch slam_toolbox online_async_launch.py
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]

  realsense:
    image: realsense2_py_humble_root
    container_name: higien_realsense

    ## Increase memory bufer for usb devices
    ## Disable autosuspend for usb devices
    # sudo sh -c 'echo -1 > /sys/module/usbcore/parameters/autosuspend' 
    # sudo sh -c 'echo 256 > /sys/module/usbcore/parameters/usbfs_memory_mb' 
    # user: "1000:1000"
    # group: "1000"

    network_mode: host
    privileged: true
    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    runtime: nvidia
    volumes:
      - *sharedMemoryFastRTPS
      - "/dev:/dev"
      - "/run/udev:/run/udev:ro"
      - "ros2_workspaces:/ros2_workspaces/"

    device_cgroup_rules:
      - "c 189:* rmw"
      - "c 81:* rmw"

    # command: /bin/bash
    # command: ros2 launch higien realsense2.launch.py enable_sync:=true align_depth.enable:=true enable_fisheye1:=false enable_fisheye2:=false
    command: ros2 launch higien realsense2.launch.py config_file:="'/ros2_workspaces/higien_ws/src/higien/params/realsense2.yaml'"

    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]

  realsense-transformer:
    image: sllidar:humble
    container_name: higien_realsense_transformer

    network_mode: host
    pid: host

    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    command: ros2 run tf2_ros static_transform_publisher --z 0.6 --yaw 3.14 --frame-id base_footprint --child-frame-id camera_link
    depends_on:
      - realsense

  human_detector:
    build:
      # dockerfile: zed2_ros/dockerfile
      context: docker/human_detector/

    image: human_detector:humble
    container_name: higien_human_detector

    network_mode: host
    # pid: host

    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

    command: /bin/bash

    volumes:
      - *sharedMemoryFastRTPS
      # - "/dev:/dev"
      # - "/run/udev:/run/udev:ro"
      - "ros2_workspaces:/ros2_workspaces/"

    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
    depends_on:
      - realsense-transformer

  ros2_bridge:
    # build:
    # dockerfile: zed2_ros/dockerfile
    # context: docker/rplidar_s2/
    image: nav2:humble
    container_name: ros2_bridge

    network_mode: host
    # pid: host
    # ipc: host

    restart: unless-stopped
    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    volumes:
      - ~/ros2_workspaces:/home/ros/ros2_workspaces/
      - *sharedMemoryFastRTPS

    # privileged: true
    # devices:
    #   - /dev/ttyUSB0
    #   - /dev/rplidar
    # group_add:
    #   - dialout

    # volumes:
    #   - /dev:/dev
    runtime: nvidia
    command: ros2 launch rosbridge_server rosbridge_websocket_launch.xml

volumes:
  ros2_workspaces:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/ssd-nvidia/ros2_workspaces/

networks:
  lanlab:
    driver: bridge
  hostnet:
    external: true
    name: host
  #  ipam:
  #    driver: default
  #    config:
  #      - subnet: 192.168.0.0/24
  #        gateway: 192.168.0.1
